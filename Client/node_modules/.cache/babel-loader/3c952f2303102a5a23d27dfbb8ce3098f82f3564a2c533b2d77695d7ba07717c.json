{"ast":null,"code":"import { FILTER, ORDER, RESET } from \"./types\";\nimport axios from \"axios\";\nexport const addFav = character => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav\";\n  return async dispatch => {\n    const {\n      data\n    } = await axios.get(endpoint, character);\n    return dispatch({\n      type: \"ADD_FAV\",\n      payload: data\n    });\n    // axios.post(endpoint, character).then(({ data }) => {\n    //   return dispatch({\n    //     type: \"ADD_FAV\",\n    //     payload: data,\n    //   });\n    // });\n  };\n};\n\nexport const removeFav = id => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav/\" + id;\n  return dispatch => {\n    axios.delete(endpoint).then(_ref => {\n      let {\n        data\n      } = _ref;\n      return dispatch({\n        type: \"REMOVE_FAV\",\n        payload: data\n      });\n    });\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};\nexport const reset = () => {\n  return {\n    type: RESET\n  };\n};\n\n/*\nfilterCards: esta función recibe por parámetro un gender. Debe retornar una action con el type igual a \"FILTER\" y el payload será igual al parámetro recibido.\n\norderCards: esta función recibe por parámetro un orden (será: A: ascendente o D: descendente). Debe retornar una action con el type igual a \"ORDER\" y el payload será igual al parámetro recibido.\n*/","map":{"version":3,"names":["FILTER","ORDER","RESET","axios","addFav","character","endpoint","dispatch","data","get","type","payload","removeFav","id","delete","then","_ref","filterCards","gender","orderCards","order","reset"],"sources":["/Users/yonathanacevedo/Desktop/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import { FILTER, ORDER, RESET } from \"./types\";\nimport axios from \"axios\";\n\nexport const addFav = (character) => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav\";\n  return async (dispatch) => {\n    const { data } = await axios.get(endpoint, character);\n\n    return dispatch({\n      type: \"ADD_FAV\",\n      payload: data,\n    });\n    // axios.post(endpoint, character).then(({ data }) => {\n    //   return dispatch({\n    //     type: \"ADD_FAV\",\n    //     payload: data,\n    //   });\n    // });\n  };\n};\n\nexport const removeFav = (id) => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav/\" + id;\n  return (dispatch) => {\n    axios.delete(endpoint).then(({ data }) => {\n      return dispatch({\n        type: \"REMOVE_FAV\",\n        payload: data,\n      });\n    });\n  };\n};\n\nexport const filterCards = (gender) => {\n  return {\n    type: FILTER,\n    payload: gender,\n  };\n};\n\nexport const orderCards = (order) => {\n  return {\n    type: ORDER,\n    payload: order,\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: RESET,\n  };\n};\n\n/*\nfilterCards: esta función recibe por parámetro un gender. Debe retornar una action con el type igual a \"FILTER\" y el payload será igual al parámetro recibido.\n\norderCards: esta función recibe por parámetro un orden (será: A: ascendente o D: descendente). Debe retornar una action con el type igual a \"ORDER\" y el payload será igual al parámetro recibido.\n*/\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,KAAK,QAAQ,SAAS;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACnC,MAAMC,QAAQ,GAAG,wCAAwC;EACzD,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACM,GAAG,CAACH,QAAQ,EAAED,SAAS,CAAC;IAErD,OAAOE,QAAQ,CAAC;MACdG,IAAI,EAAE,SAAS;MACfC,OAAO,EAAEH;IACX,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;AACH,CAAC;;AAED,OAAO,MAAMI,SAAS,GAAIC,EAAE,IAAK;EAC/B,MAAMP,QAAQ,GAAG,yCAAyC,GAAGO,EAAE;EAC/D,OAAQN,QAAQ,IAAK;IACnBJ,KAAK,CAACW,MAAM,CAACR,QAAQ,CAAC,CAACS,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAER;MAAK,CAAC,GAAAQ,IAAA;MACnC,OAAOT,QAAQ,CAAC;QACdG,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAEH;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAO;IACLR,IAAI,EAAEV,MAAM;IACZW,OAAO,EAAEO;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAO;IACLV,IAAI,EAAET,KAAK;IACXU,OAAO,EAAES;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACzB,OAAO;IACLX,IAAI,EAAER;EACR,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
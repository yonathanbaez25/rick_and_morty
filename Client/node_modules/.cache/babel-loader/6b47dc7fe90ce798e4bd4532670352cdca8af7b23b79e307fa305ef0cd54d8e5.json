{"ast":null,"code":"import { ADD_FAV, FILTER, ORDER, REMOVE_FAV, RESET } from \"./types\";\nimport axios from \"axios\";\nexport const addFav = character => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav\";\n  return dispatch => {\n    axios.post(endpoint, character).then(_ref => {\n      let {\n        data\n      } = _ref;\n      return dispatch({\n        type: ADD_FAV,\n        payload: data\n      });\n    });\n  };\n};\nexport const removeFav = id => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav/\" + id;\n  return dispatch => {\n    axios.delete(endpoint).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      return dispatch({\n        type: REMOVE_FAV,\n        payload: data\n      });\n    });\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};\nexport const reset = () => {\n  return {\n    type: RESET\n  };\n};\n\n/*\nfilterCards: esta función recibe por parámetro un gender. Debe retornar una action con el type igual a \"FILTER\" y el payload será igual al parámetro recibido.\n\norderCards: esta función recibe por parámetro un orden (será: A: ascendente o D: descendente). Debe retornar una action con el type igual a \"ORDER\" y el payload será igual al parámetro recibido.\n*/","map":{"version":3,"names":["ADD_FAV","FILTER","ORDER","REMOVE_FAV","RESET","axios","addFav","character","endpoint","dispatch","post","then","_ref","data","type","payload","removeFav","id","delete","_ref2","filterCards","gender","orderCards","order","reset"],"sources":["/Users/yonathanacevedo/Desktop/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import { ADD_FAV, FILTER, ORDER, REMOVE_FAV, RESET } from \"./types\";\nimport axios from \"axios\";\n\nexport const addFav = (character) => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav\";\n  return (dispatch) => {\n    axios.post(endpoint, character).then(({ data }) => {\n      return dispatch({\n        type: ADD_FAV,\n        payload: data,\n      });\n    });\n  };\n};\n\nexport const removeFav = (id) => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav/\" + id;\n  return (dispatch) => {\n    axios.delete(endpoint).then(({ data }) => {\n      return dispatch({\n        type: REMOVE_FAV,\n        payload: data,\n      });\n    });\n  };\n};\n\nexport const filterCards = (gender) => {\n  return {\n    type: FILTER,\n    payload: gender,\n  };\n};\n\nexport const orderCards = (order) => {\n  return {\n    type: ORDER,\n    payload: order,\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: RESET,\n  };\n};\n\n/*\nfilterCards: esta función recibe por parámetro un gender. Debe retornar una action con el type igual a \"FILTER\" y el payload será igual al parámetro recibido.\n\norderCards: esta función recibe por parámetro un orden (será: A: ascendente o D: descendente). Debe retornar una action con el type igual a \"ORDER\" y el payload será igual al parámetro recibido.\n*/\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,EAAEC,KAAK,QAAQ,SAAS;AACnE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACnC,MAAMC,QAAQ,GAAG,wCAAwC;EACzD,OAAQC,QAAQ,IAAK;IACnBJ,KAAK,CAACK,IAAI,CAACF,QAAQ,EAAED,SAAS,CAAC,CAACI,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MAC5C,OAAOH,QAAQ,CAAC;QACdK,IAAI,EAAEd,OAAO;QACbe,OAAO,EAAEF;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,SAAS,GAAIC,EAAE,IAAK;EAC/B,MAAMT,QAAQ,GAAG,yCAAyC,GAAGS,EAAE;EAC/D,OAAQR,QAAQ,IAAK;IACnBJ,KAAK,CAACa,MAAM,CAACV,QAAQ,CAAC,CAACG,IAAI,CAACQ,KAAA,IAAc;MAAA,IAAb;QAAEN;MAAK,CAAC,GAAAM,KAAA;MACnC,OAAOV,QAAQ,CAAC;QACdK,IAAI,EAAEX,UAAU;QAChBY,OAAO,EAAEF;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAO;IACLP,IAAI,EAAEb,MAAM;IACZc,OAAO,EAAEM;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAO;IACLT,IAAI,EAAEZ,KAAK;IACXa,OAAO,EAAEQ;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACzB,OAAO;IACLV,IAAI,EAAEV;EACR,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/yonathanacevedo/Desktop/rick_and_morty/src/components/favorites/Favorites.jsx\";\nimport React from \"react\";\nimport Card from \"../card/Card\";\nimport { connect } from \"react-redux\";\nimport { removeFav } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Favorites(_ref) {\n  let {\n    myFavorites,\n    onClose,\n    removeFav\n  } = _ref;\n  const cardsContainer = {\n    display: \"flex\",\n    flexWrap: \"Wrap\",\n    justifyContent: \"space-evenly\"\n  };\n  const closeFav = id => {\n    onClose(id);\n    removeFav(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardsContainer,\n      children: myFavorites.map(characters => {\n        var _characters$origin;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: characters.id,\n          name: characters.name,\n          status: characters.status,\n          species: characters.species,\n          gender: characters.gender,\n          origin: (_characters$origin = characters.origin) === null || _characters$origin === void 0 ? void 0 : _characters$origin.name,\n          image: characters.image,\n          onClose: () => closeFav(characters.id)\n        }, characters.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Favorites;\nfunction mapState(st) {\n  return {\n    myFavorites: st.myFavorites\n  };\n}\nfunction mapDispatch(d) {\n  return {\n    removeFav: id => d(removeFav(id))\n  };\n}\nexport default connect(mapState, mapDispatch)(Favorites);\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","Card","connect","removeFav","jsxDEV","_jsxDEV","Favorites","_ref","myFavorites","onClose","cardsContainer","display","flexWrap","justifyContent","closeFav","id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","map","characters","_characters$origin","name","status","species","gender","origin","image","_c","mapState","st","mapDispatch","d","$RefreshReg$"],"sources":["/Users/yonathanacevedo/Desktop/rick_and_morty/src/components/favorites/Favorites.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"../card/Card\";\nimport { connect } from \"react-redux\";\nimport { removeFav } from \"../../redux/actions\";\n\nfunction Favorites({ myFavorites, onClose, removeFav }) {\n  const cardsContainer = {\n    display: \"flex\",\n    flexWrap: \"Wrap\",\n    justifyContent: \"space-evenly\",\n  };\n\n  const closeFav = (id) => {\n    onClose(id);\n    removeFav(id);\n  };\n\n  return (\n    <div>\n      <h1>Favorites</h1>\n      <div style={cardsContainer}>\n        {myFavorites.map((characters) => (\n          <Card\n            key={characters.id}\n            id={characters.id}\n            name={characters.name}\n            status={characters.status}\n            species={characters.species}\n            gender={characters.gender}\n            origin={characters.origin?.name}\n            image={characters.image}\n            onClose={() => closeFav(characters.id)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction mapState(st) {\n  return {\n    myFavorites: st.myFavorites,\n  };\n}\n\nfunction mapDispatch(d) {\n  return {\n    removeFav: (id) => d(removeFav(id)),\n  };\n}\n\nexport default connect(mapState, mapDispatch)(Favorites);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,SAASA,CAAAC,IAAA,EAAsC;EAAA,IAArC;IAAEC,WAAW;IAAEC,OAAO;IAAEN;EAAU,CAAC,GAAAI,IAAA;EACpD,MAAMG,cAAc,GAAG;IACrBC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE;EAClB,CAAC;EAED,MAAMC,QAAQ,GAAIC,EAAE,IAAK;IACvBN,OAAO,CAACM,EAAE,CAAC;IACXZ,SAAS,CAACY,EAAE,CAAC;EACf,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBf,OAAA;MAAKgB,KAAK,EAAEX,cAAe;MAAAM,QAAA,EACxBR,WAAW,CAACc,GAAG,CAAEC,UAAU;QAAA,IAAAC,kBAAA;QAAA,oBAC1BnB,OAAA,CAACJ,IAAI;UAEHc,EAAE,EAAEQ,UAAU,CAACR,EAAG;UAClBU,IAAI,EAAEF,UAAU,CAACE,IAAK;UACtBC,MAAM,EAAEH,UAAU,CAACG,MAAO;UAC1BC,OAAO,EAAEJ,UAAU,CAACI,OAAQ;UAC5BC,MAAM,EAAEL,UAAU,CAACK,MAAO;UAC1BC,MAAM,GAAAL,kBAAA,GAAED,UAAU,CAACM,MAAM,cAAAL,kBAAA,uBAAjBA,kBAAA,CAAmBC,IAAK;UAChCK,KAAK,EAAEP,UAAU,CAACO,KAAM;UACxBrB,OAAO,EAAEA,CAAA,KAAMK,QAAQ,CAACS,UAAU,CAACR,EAAE;QAAE,GARlCQ,UAAU,CAACR,EAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASnB,CAAC;MAAA,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACW,EAAA,GAhCQzB,SAAS;AAkClB,SAAS0B,QAAQA,CAACC,EAAE,EAAE;EACpB,OAAO;IACLzB,WAAW,EAAEyB,EAAE,CAACzB;EAClB,CAAC;AACH;AAEA,SAAS0B,WAAWA,CAACC,CAAC,EAAE;EACtB,OAAO;IACLhC,SAAS,EAAGY,EAAE,IAAKoB,CAAC,CAAChC,SAAS,CAACY,EAAE,CAAC;EACpC,CAAC;AACH;AAEA,eAAeb,OAAO,CAAC8B,QAAQ,EAAEE,WAAW,CAAC,CAAC5B,SAAS,CAAC;AAAC,IAAAyB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
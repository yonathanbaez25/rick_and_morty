{"ast":null,"code":"import { ADD_FAV, FILTER, ORDER, REMOVE_FAV, RESET } from \"./types\";\nimport axios from \"axios\";\nexport const addFav = character => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav\";\n  return async dispatch => {\n    const {\n      data\n    } = await axios.post(endpoint, character);\n    return dispatch({\n      type: ADD_FAV,\n      payload: data\n    });\n  };\n};\nexport const removeFav = id => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav/\" + id;\n  return async dispatch => {\n    const {\n      data\n    } = await axios.delete(endpoint);\n    return dispatch({\n      type: REMOVE_FAV,\n      payload: data\n    });\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};\nexport const reset = () => {\n  return {\n    type: RESET\n  };\n};\n\n/*\nfilterCards: esta función recibe por parámetro un gender. Debe retornar una action con el type igual a \"FILTER\" y el payload será igual al parámetro recibido.\n\norderCards: esta función recibe por parámetro un orden (será: A: ascendente o D: descendente). Debe retornar una action con el type igual a \"ORDER\" y el payload será igual al parámetro recibido.\n*/","map":{"version":3,"names":["ADD_FAV","FILTER","ORDER","REMOVE_FAV","RESET","axios","addFav","character","endpoint","dispatch","data","post","type","payload","removeFav","id","delete","filterCards","gender","orderCards","order","reset"],"sources":["/Users/yonathanacevedo/Desktop/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import { ADD_FAV, FILTER, ORDER, REMOVE_FAV, RESET } from \"./types\";\nimport axios from \"axios\";\n\nexport const addFav = (character) => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav\";\n  return async (dispatch) => {\n    const { data } = await axios.post(endpoint, character);\n\n    return dispatch({\n      type: ADD_FAV,\n      payload: data,\n    });\n  };\n};\n\nexport const removeFav = (id) => {\n  const endpoint = \"http://localhost:3001/rickandmorty/fav/\" + id;\n  return async (dispatch) => {\n    const { data } = await axios.delete(endpoint);\n    return dispatch({\n      type: REMOVE_FAV,\n      payload: data,\n    });\n  };\n};\n\nexport const filterCards = (gender) => {\n  return {\n    type: FILTER,\n    payload: gender,\n  };\n};\n\nexport const orderCards = (order) => {\n  return {\n    type: ORDER,\n    payload: order,\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: RESET,\n  };\n};\n\n/*\nfilterCards: esta función recibe por parámetro un gender. Debe retornar una action con el type igual a \"FILTER\" y el payload será igual al parámetro recibido.\n\norderCards: esta función recibe por parámetro un orden (será: A: ascendente o D: descendente). Debe retornar una action con el type igual a \"ORDER\" y el payload será igual al parámetro recibido.\n*/\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,EAAEC,KAAK,QAAQ,SAAS;AACnE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACnC,MAAMC,QAAQ,GAAG,wCAAwC;EACzD,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAACH,QAAQ,EAAED,SAAS,CAAC;IAEtD,OAAOE,QAAQ,CAAC;MACdG,IAAI,EAAEZ,OAAO;MACba,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,SAAS,GAAIC,EAAE,IAAK;EAC/B,MAAMP,QAAQ,GAAG,yCAAyC,GAAGO,EAAE;EAC/D,OAAO,MAAON,QAAQ,IAAK;IACzB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACW,MAAM,CAACR,QAAQ,CAAC;IAC7C,OAAOC,QAAQ,CAAC;MACdG,IAAI,EAAET,UAAU;MAChBU,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAO;IACLN,IAAI,EAAEX,MAAM;IACZY,OAAO,EAAEK;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAO;IACLR,IAAI,EAAEV,KAAK;IACXW,OAAO,EAAEO;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACzB,OAAO;IACLT,IAAI,EAAER;EACR,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}